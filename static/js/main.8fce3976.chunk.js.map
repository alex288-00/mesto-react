{"version":3,"sources":["utils/api.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","authorization","then","_statusJson","userData","method","body","JSON","stringify","name","about","cardData","link","cardId","isLiked","avatar","Header","className","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwner","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","onClick","src","alt","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","map","item","Footer","PopupWithForm","title","textBtn","children","isOpen","onClose","onSubmit","noValidate","type","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","nameForm","id","placeholder","minLength","maxLength","required","value","onChange","target","EditAvatarPopup","onUpdateAvatar","textInput","useRef","current","ref","AddPlacePopup","textInputName","textInputLink","ImagePopup","App","setCurrentUser","loader","setLoader","placeLoader","setPlaceLoader","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCards","closeAllPopups","getInitialCards","catch","err","console","log","getUserData","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","newCardData","filter","patchUserData","userInfo","finally","patchUserAvatar","userAva","postAddCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fce3976.chunk.js","sourcesContent":["export class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  //Статус ответа\r\n  _statusJson(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  //Запрашиваем информацию о пользователе\r\n  getUserData() {\r\n    return fetch(this._baseUrl + \"/users/me\", {\r\n      headers: {\r\n        authorization: this._headers,\r\n      },\r\n    }).then(this._statusJson);\r\n  }\r\n\r\n  //Запрашиваем карточки\r\n  getInitialCards() {\r\n    return fetch(this._baseUrl + \"/cards\", {\r\n      headers: {\r\n        authorization: this._headers,\r\n      },\r\n    }).then(this._statusJson);\r\n  }\r\n\r\n  //Обновляем информацию о пользователе\r\n  patchUserData(userData) {\r\n    return fetch(this._baseUrl + \"/users/me\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._headers,\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: userData.name,\r\n        about: userData.about,\r\n      }),\r\n    }).then(this._statusJson);\r\n  }\r\n\r\n  //Отправляем новую карточку на сервер\r\n  postAddCard(cardData) {\r\n    return fetch(this._baseUrl + \"/cards\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._headers,\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: cardData.name,\r\n        link: cardData.link,\r\n      }),\r\n    }).then(this._statusJson);\r\n  }\r\n\r\n  //Добавляем или удаляем лайк\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(this._baseUrl + \"/cards/likes/\" + cardId, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: {\r\n        authorization: this._headers,\r\n      },\r\n    }).then(this._statusJson);\r\n  }\r\n\r\n  //Удаляем карточку\r\n  deleteCard(cardId) {\r\n    return fetch(this._baseUrl + \"/cards/\" + cardId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._headers,\r\n      },\r\n    }).then(this._statusJson);\r\n  }\r\n\r\n  //Обновляем аватар пользователя\r\n  patchUserAvatar(userData) {\r\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._headers,\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: userData.avatar,\r\n      }),\r\n    }).then(this._statusJson);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-17\",\r\n  headers: \"206505f6-db9d-4d3e-9753-f9e84f791b0d\",\r\n});\r\n\r\nexport default api;\r\n","//Компонент шапки приложения\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nexport const CurrentUserContext = React.createContext();\r\n","import { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  //Подписка на контекст\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwner = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `element__trash ${\r\n    isOwner ? \"\" : \"element__trash_hidden\"\r\n  }`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `element__like ${\r\n    isLiked ? \"element__like_active\" : \"\"\r\n  }`;\r\n\r\n  //Функция с подставлением данных при клике на карточку\r\n  function handleClick() {\r\n    onCardClick({\r\n      src: card.link,\r\n      name: card.name,\r\n    });\r\n  }\r\n\r\n  //Обработчик лайков\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  //Обработчик удаления карточек\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        onClick={handleDeleteClick}\r\n      ></button>\r\n      <img\r\n        className=\"element__image\"\r\n        src={card.link}\r\n        alt={card.name}\r\n        onClick={handleClick}\r\n      />\r\n\r\n      <div className=\"element__title-like\">\r\n        <h3 className=\"element__title\">{card.name}</h3>\r\n        <div className=\"element__like-counter\">\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <p className=\"element__counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useContext } from \"react\";\r\nimport Card from \"./Card.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Main({\r\n  onEditProfile,\r\n  onAddPlace,\r\n  onEditAvatar,\r\n  onCardClick,\r\n  onCardLike,\r\n  onCardDelete,\r\n  cards,\r\n}) {\r\n  //Подписка на контекст\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__container\">\r\n          <img\r\n            className=\"profile__avatar\"\r\n            src={currentUser.avatar}\r\n            alt={currentUser.name}\r\n          />\r\n          <div className=\"profile__update\">\r\n            <button className=\"profile__update-btn\" onClick={onEditAvatar} />\r\n          </div>\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__info-edit\">\r\n            <h2 className=\"profile__info-name\">{currentUser.name}</h2>\r\n            <button\r\n              className=\"profile__info-editbutton\"\r\n              onClick={onEditProfile}\r\n            />\r\n          </div>\r\n          <p className=\"profile__info-job\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"profile__info-addbutton\" onClick={onAddPlace} />\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {cards.map((item) => {\r\n          return (\r\n            <Card\r\n              key={item._id}\r\n              card={item}\r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete}\r\n              onCardClick={onCardClick}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","//Компонент подвала приложения\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","//Компонент с общей разметкой попапов\r\n\r\nfunction PopupWithForm({\r\n  name,\r\n  title,\r\n  textBtn,\r\n  children,\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n}) {\r\n  return (\r\n    <div className={`popup popup_${name} ${isOpen ? \"popup_opened\" : \"\"}`}>\r\n      <form\r\n        className={`popup__form popup__form_${name} `}\r\n        onSubmit={onSubmit}\r\n        noValidate\r\n      >\r\n        <h2 className=\"popup__title popup__title_profile\">{title}</h2>\r\n        <button type=\"button\" className=\"popup__close\" onClick={onClose} />\r\n        {children}\r\n        <button type=\"submit\" className=\"popup__button\">\r\n          {textBtn}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, textBtn }) {\r\n  //Подписка на контекст\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  //Переменные состояния данных пользователя\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  //Отслеживаем изменения инпута и обновляем стейт для имени пользователя\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  //Отслеживаем изменения инпута и обновляем стейт для описания пользователя\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  //Обработчик сабмита формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"profile\"\r\n      nameForm=\"profile\"\r\n      title=\"Редактировать профиль\"\r\n      textBtn={textBtn}\r\n      children={\r\n        <>\r\n          {\" \"}\r\n          <input\r\n            className=\"popup__input popup__input_name\"\r\n            id=\"name-input\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n            minLength={2}\r\n            maxLength={40}\r\n            required\r\n            value={name}\r\n            onChange={handleChangeName}\r\n          />\r\n          <span\r\n            className=\"popup__error popup__error_visible\"\r\n            id=\"name-input-error\"\r\n          />\r\n          <input\r\n            className=\"popup__input popup__input_job\"\r\n            id=\"job-input\"\r\n            name=\"about\"\r\n            type=\"text\"\r\n            placeholder=\"Описание\"\r\n            minLength={2}\r\n            maxLength={200}\r\n            required\r\n            value={description}\r\n            onChange={handleChangeDescription}\r\n          />\r\n          <span\r\n            className=\"popup__error popup__error_visible\"\r\n            id=\"job-input-error\"\r\n          />{\" \"}\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, textBtn }) {\r\n  //Используем реф инпута аватара\r\n  const textInput = useRef();\r\n\r\n  //Обработчик сабмита формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: textInput.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"update-avatar\"\r\n      nameForm=\"update-avatar\"\r\n      title=\"Обновить аватар\"\r\n      textBtn={textBtn}\r\n      children={\r\n        <>\r\n          <input\r\n            className=\"popup__input popup__input_link\"\r\n            id=\"link-input\"\r\n            name=\"avatar\"\r\n            type=\"url\"\r\n            placeholder=\"Ссылка на картинку\"\r\n            ref={textInput}\r\n            required\r\n          />\r\n          <span\r\n            className=\"popup__error popup__error_visible\"\r\n            id=\"link-input-error\"\r\n          />\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, textBtn }) {\r\n  //Используем реф инпута названия карточки\r\n  const textInputName = useRef();\r\n  //Используем реф инпута ссылки на карточку\r\n  const textInputLink = useRef();\r\n\r\n  //Обработчик сабмита формы\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name: textInputName.current.value,\r\n      link: textInputLink.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"add-card\"\r\n      title=\"Новое место\"\r\n      textBtn={textBtn}\r\n      children={\r\n        <>\r\n          <input\r\n            className=\"popup__input popup__input_mesto\"\r\n            id=\"mesto-input\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Название\"\r\n            minLength={2}\r\n            maxLength={30}\r\n            ref={textInputName}\r\n            required\r\n          />\r\n          <span\r\n            className=\"popup__error popup__error_visible\"\r\n            id=\"mesto-input-error\"\r\n          />\r\n          <input\r\n            className=\"popup__input popup__input_link\"\r\n            id=\"link-input\"\r\n            name=\"link\"\r\n            type=\"url\"\r\n            placeholder=\"Ссылка на картинку\"\r\n            ref={textInputLink}\r\n            required\r\n          />\r\n          <span\r\n            className=\"popup__error popup__error_visible\"\r\n            id=\"link-input-error\"\r\n          />\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","//Компонент попапа изображения\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n  return (\r\n    <div className={`popup popup_img ${card ? \"popup_opened\" : \"\"}`}>\r\n      <div className=\"popup__zoom-container\">\r\n        <button className=\"popup__close\" onClick={onClose} />\r\n        <img className=\"popup__image\" src={card.src} alt={card.name} />\r\n        <p className=\"popup__subtitle\">{card.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import api from \"../utils/api.js\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport \"../index.css\";\n\nfunction App() {\n  //Переменная состояния данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n\n  //Прелоадер для обновления аватара и данных пользователя\n  const [loader, setLoader] = useState(\"Сохранить\");\n\n  //Прелоадер для добавления карточки\n  const [placeLoader, setPlaceLoader] = useState(\"Создать\");\n\n  // Переменные состояния и обработчики для открытия попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  //Переменные состояния для карточки\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  //Функция открытия попапа изображения и передачи данных для карточки\n  function handleCardClick(card) {\n    setSelectedCard({\n      src: card.src,\n      name: card.name,\n    });\n  }\n\n  //Функия закрытия попапов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  //Обработчик изменения данных пользователя\n  function handleUpdateUser(userData) {\n    setLoader(\"Сохранение..\");\n    api\n      .patchUserData(userData)\n      .then((userInfo) => {\n        setCurrentUser(userInfo);\n      })\n      .catch((err) => {\n        console.log(\"Произошла ошибка:\", err);\n      })\n      .finally(() => {\n        setLoader(\"Сохранить\");\n        closeAllPopups();\n      });\n  }\n\n  //Обработчик аватара пользователя\n  function handleUpdateAvatar(userData) {\n    setLoader(\"Сохранение..\");\n    api\n      .patchUserAvatar(userData)\n      .then((userAva) => {\n        setCurrentUser(userAva);\n      })\n      .catch((err) => {\n        console.log(\"Произошла ошибка:\", err);\n      })\n\n      .finally(() => {\n        setLoader(\"Сохранить\");\n        closeAllPopups();\n      });\n  }\n\n  //Обработчик создания новой карточки\n  function handleAddPlaceSubmit(cardData) {\n    setPlaceLoader(\"Создание..\");\n    api\n      .postAddCard(cardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .catch((err) => {\n        console.log(\"Произошла ошибка:\", err);\n      })\n      .finally(() => {\n        setPlaceLoader(\"Создать\");\n        closeAllPopups();\n      });\n  }\n\n  //Обработчик лайка карточки\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(\"Произошла ошибка:\", err);\n      });\n  }\n\n  //Обработчик удаления карточек\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCardData = cards.filter((c) => c._id !== card._id);\n        setCards(newCardData);\n      })\n      .catch((err) => {\n        console.log(\"Произошла ошибка:\", err);\n      });\n  }\n\n  //Эффект совершает запрос в API за карточками\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then((card) => {\n        setCards(card);\n      })\n\n      .catch((err) => {\n        console.log(\"Произошла ошибка:\", err);\n      });\n  }, []);\n\n  //Эффект совершает запрос в API за данными пользователя\n  useEffect(() => {\n    api\n      .getUserData()\n      .then((userData) => {\n        setCurrentUser(userData);\n      })\n      .catch((err) => {\n        console.log(\"Произошла ошибка:\", err);\n      });\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          cards={cards}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          textBtn={loader}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          textBtn={loader}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          textBtn={placeLoader}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}